{"version":3,"sources":["components/Soundboard/SoundboardSpot.tsx","components/Soundboard/SoundboardRow.tsx","components/Soundboard/Soundboard.tsx","components/TrackControl.tsx","sounds/Instrument.tsx","sounds/Kick.tsx","sounds/Chords.tsx","sounds/Hihats.tsx","sounds/Lead.tsx","sounds/Snare.tsx","sounds/Clap.tsx","sounds/OpenHats.tsx","sounds/Crash.tsx","sounds/Percs.tsx","components/PlayButton.tsx","components/Track.tsx","components/NoteMap.tsx","components/LoopPlayer.tsx","sounds/Sub.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Soundboard_SoundboardSpot","_super","SoundboardSpot","props","_this","call","this","state","active","noteMap","track","id","soundId","toggle","bind","tslib_es6","prototype","setting","console","log","setState","prevState","render","react","className","style","height","width","beatsPerBar","key","onClick","SoundboardRow","Soundboard","toggleDivision","trackID","row","generateRow","soundID","Array","from","beatDivisions","keys","map","el","i","generateBar","barIndex","notifyToggle","sounds","components_Soundboard_Soundboard","grid","generateBoard","components_TrackControl","TrackControl","myName","sounds_Instrument","Instrument","updateLoop","_a","trackId","transport","clear","loopId","scheduleRepeat","time","getTrack","forEach","soundStates","soundIndex","stateIndex","playSound","Tone","toSeconds","gridState","loopPlaying","baseURL","sound","Error","componentWillReceiveProps","nextProps","updateSoundboard","updateGrid","length","sounds_Kick","Kick","soundFolder","buffers","filename","push","toMaster","loaded","start","sounds_Chords","Chords","Hihats","HiHats","sounds_Lead","Lead","synths","notes","reverse","triggerAttackRelease","sounds_Snare","Snare","sounds_Clap","Clap","sounds_OpenHats","OpenHats","sounds_Crash","Crash","sounds_Percs","Percs","components_PlayButton","PlayButton","isPlaying","newProps","playFunc","components_Track","Track","children","NoteMap","_noteMap","get","set","beat","components_LoopPlayer","LoopPlayer","instruments","stop","play","alert","loop","sounds_Sub","Sub","src_App","App","trackInstruments","trackNames","trackClasses","trackNotes","components_NoteMap","buffersLoaded","on","index","togglePlayLoop","trackElements","E","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","react_dom","document","getElementById","URL","toString","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjD,CACE,CAAE,EAAG,EAAG,EAA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","file":"static/js/main.9302eef6.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface ISoundboardSpotProps\n{\n  track: number\n  id: number\n  soundId: number\n  height: number\n  beatDivisions: number\n  notifyToggle: () => void\n  noteMap: any\n  active: boolean\n  beatsPerBar: number\n}\ninterface ISoundboardSpotState\n{\n  active: boolean\n  noteMap: any\n  track: number\n  soundId: number\n  id: number\n}\nclass SoundboardSpot extends React.Component<ISoundboardSpotProps, ISoundboardSpotState>\n{\n  constructor(props: ISoundboardSpotProps)\n  {\n    super(props)\n\n    this.state = {\n      active: props.active,\n      noteMap: props.noteMap,\n      track: props.track,\n      id: props.id,\n      soundId: props.soundId\n    }\n\n    this.toggle = this.toggle.bind(this)\n  }\n\n  public toggle ()\n  {\n    const setting = this.state.noteMap.toggle(this.state.track, this.state.soundId, this.state.id)\n    console.log('newsetting: ' + setting)\n    this.setState((prevState: ISoundboardSpotState) =>\n    {\n      return {\n        active: setting\n      }\n    })\n  }\n\n  render ()\n  {\n    return (\n      <div\n        className={'beatDivision ' + (this.state && this.state.active\n          ? 'active ' + this.props.id : 'inactive ' + this.props.id)}\n        style={{\n          height: \"100%\",\n          width: (96.6 / this.props.beatsPerBar) + \"%\"\n        }}\n        key={this.props.id}\n        onClick={this.toggle}\n      >\n      </div>\n    )\n  }\n}\n\nexport default SoundboardSpot\n","import * as React from 'react'\nimport SoundboardSpot from './SoundboardSpot';\n\ninterface ISoundboardProps\n{\n  beatDivisions: number\n  height: number\n  noteMap: any\n  trackID: number\n  soundID: number\n  sounds: number\n}\ninterface ISoundboardState\n{\n  noteMap: any\n  row: JSX.Element[]\n  trackID: number\n  soundID: number\n}\n\nconst BEATS_PER_BAR = 4\n\nclass Soundboard extends React.Component<ISoundboardProps, ISoundboardState>\n{\n  constructor(props: ISoundboardProps)\n  {\n    super(props)\n\n    this.toggleDivision.bind(this)\n\n    console.log(\"generated row: \" + props.trackID)\n    this.state = {\n      noteMap: props.noteMap,\n      row: this.generateRow(props),\n      trackID: props.trackID,\n      soundID: props.soundID\n    }\n  }\n\n  public generateRow (props: ISoundboardProps)\n  {\n    // flatten array of bars\n    return Array.from(Array(props.beatDivisions / BEATS_PER_BAR).keys())\n      .map((el: number, i: number) =>\n        <div key={i} className='bar'>{this.generateBar(props, i)}</div>)\n\n  }\n\n  public generateBar (props: ISoundboardProps, barIndex: number)\n  {\n    return Array.from(Array(BEATS_PER_BAR))\n      .map((el: number, i: number) =>\n        <SoundboardSpot\n          height={props.height}\n          beatsPerBar={BEATS_PER_BAR}\n          beatDivisions={props.beatDivisions}\n          track={props.trackID}\n          soundId={props.soundID}\n          id={barIndex * 4 + i}\n          key={i}\n          notifyToggle={() => this.toggleDivision(i)}\n          noteMap={props.noteMap}\n          active={false}\n        />\n        // <div\n        //   className={'beatDivision ' + (this.state && this.state.divisionStates[ i ] ? 'active ' + i : 'inactive ' + i)}\n        //   style={{\n        //     height: this.props.height + \"%\",\n        //     width: (100 / this.props.beatDivisions) + \"%\"\n        //   }}\n        //   key={i}\n        //   onClick={() => this.toggleDivision(i)}/>\n      )\n  }\n\n  public toggleDivision (i: number): void\n  {\n    console.log('toggledivision')\n    console.log(this.state)\n    console.log(this.state.noteMap)\n    // this.state.noteMap.set(this.props.key, i, !this.state.noteMap.get(this.props.key, i))\n    // if (this.state && this.state.divisionStates)\n    // {\n    //   console.log(\"division clicked: \" + i)\n    //   this.setState((prevState: ISoundboardState) =>\n    //   {\n    //     const divisions: number[] = prevState.divisionStates\n    //     const setting: number = prevState.divisionStates ? 0 : 1\n    //     divisions[ i ] = setting\n    //     return {\n    //       divisionStates: divisions\n    //     }\n    //   }, () => \n    //     {\n    //       return this.state.divisionStates[ i ]\n    //     })\n    // }\n  }\n\n  public render ()\n  {\n    return (\n      <div className='row' style={{ height: (101 / this.props.sounds) + '%' }} key={this.props.trackID}>\n        {this.state.row}\n      </div>\n    )\n  }\n}\n\nexport default Soundboard\n","import * as React from 'react'\n\nimport SoundboardRow from './SoundboardRow'\n\ninterface ISoundboardProps\n{\n  // callback that informs the instrument of track updates\n  updateGrid: any\n\n  // number of rows the track should have \n  height: number\n\n  // number of divisions within a bar (default = 4)\n  beatDivisions: number\n\n  noteMap: any\n  trackID: number\n}\ninterface ISoundboardState\n{\n  grid: any\n  noteMap: any\n  trackID: number\n}\n\nclass Soundboard extends React.Component<ISoundboardProps, ISoundboardState>\n{\n  constructor(props: ISoundboardProps)\n  {\n    super(props)\n\n    this.state = {\n      grid: this.generateBoard(props),\n      noteMap: props.noteMap,\n      trackID: props.trackID\n    }\n  }\n\n  public generateBoard (props: ISoundboardProps)\n  {\n    return Array.from(Array(props.height).keys())\n      .map((i: number) =>\n        <SoundboardRow\n          key={i}\n          soundID={i}\n          sounds={props.height}\n          trackID={props.trackID}\n          height={100 / props.height}\n          beatDivisions={props.beatDivisions}\n          noteMap={props.noteMap}\n        />\n      )\n  }\n\n  public render ()\n  {\n    return (\n      <div className='Soundboard'>\n        {this.state.grid}\n      </div>\n    )\n  }\n}\n\nexport default Soundboard\n","import * as React from 'react'\n\nimport '../css/instrument.css'\n\ninterface ITrackControlProps\n{\n  // a Tone.js synth object that can be used to trigger a sound\n  key: number\n  myName: string\n}\n\nclass TrackControl extends React.Component<ITrackControlProps, {}>\n{\n  constructor(props: ITrackControlProps)\n  {\n    super(props)\n  }\n\n  public render ()\n  {\n    return (\n      <div className='instrumentControl'>\n        <p>{this.props.myName}</p>\n      </div >)\n  }\n}\n\nexport default TrackControl\n","import * as React from 'react'\nimport * as Tone from 'tone'\n\nimport '../css/instrument.css'\n\nimport Soundboard from 'src/components/Soundboard/Soundboard';\nimport TrackControl from 'src/components/TrackControl';\n\nexport interface IInstrumentProps\n{\n  // a Tone.js synth object that can be used to trigger a sound\n  id: number\n  loopPlaying: boolean\n  updateGrid: (grid: any) => void\n  noteMap: any\n  myName: string\n}\n\ninterface IInstrumentState\n{\n  gridState: any[]\n  trackId: number\n  loopPlaying: boolean\n  noteMap: any\n}\n\nclass Instrument extends React.Component<IInstrumentProps, IInstrumentState>\n{\n  transport: Tone.Transport\n  loopId: number\n  sound: any\n  baseURL: string\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n\n    this.state = {\n      gridState: [ false, false, false, false ],\n      trackId: props.id,\n      loopPlaying: props.loopPlaying,\n      noteMap: props.noteMap\n    }\n\n    this.transport = Tone.Transport\n    this.loopId = this.state.trackId\n    this.baseURL = \"/react-drum-machine/Samples/Drums\"\n  }\n\n  updateLoop = () =>\n  {\n    const { noteMap, trackId } = this.state\n    if (!noteMap) { return; }\n    this.transport.clear(this.loopId);\n    console.log(\"updating instrument loop\")\n\n    const loop = (time: number) =>\n    {\n      console.log(\"instrument looping\" + trackId)\n      noteMap.getTrack(trackId).forEach((soundStates: number[], soundIndex: number) =>\n      {\n        soundStates.forEach((state: number, stateIndex) => \n        {\n          if (state == 1)\n          {\n            console.log('playing note: ' + stateIndex + ': ' + state)\n            this.playSound(soundIndex, time + stateIndex * new Tone.Time('16n').toSeconds())\n          }\n        })\n      })\n    }\n    this.loopId = this.transport.scheduleRepeat(loop, \"1m\")\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    throw new Error(\"implement playsound\")\n  }\n\n  public componentWillReceiveProps (nextProps: IInstrumentProps)\n  {\n    this.setState({\n      loopPlaying: nextProps.loopPlaying\n    })\n    this.updateLoop()\n  }\n\n  // given the grid for the soundboard, update this instrument's grid state\n  public updateSoundboard (grid: any)\n  {\n    this.props.updateGrid(grid)\n    this.setState({\n      gridState: grid\n    })\n  }\n\n  public render ()\n  {\n    return (\n      <div className={'instrument active n' + this.props.id}>\n        <TrackControl\n          key={this.props.id}\n          myName={this.props.myName}\n        />\n        <Soundboard\n          updateGrid={this.updateSoundboard}\n          height={this.state.noteMap.getTrack(this.props.id).length}\n          trackID={this.props.id}\n          beatDivisions={16}\n          noteMap={this.state.noteMap}\n        />\n      </div >\n    )\n  }\n}\n\nexport default Instrument\n","import Instrument from './Instrument'\nimport { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone'\n\nclass Kick extends Instrument\n{\n  buffers: any\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/Kicks/\" ]\n    const soundFiles = [ \"MB Kick (2).wav\", \"MB Kick (4).wav\",\n      \"MB Kick (14).wav\", \"MB Kick (15).wav\" ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Kick\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone';\n\nclass Chords extends Instrument\n{\n  buffers: Tone.Player[]\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/react-drum-machine/Samples/Chords/\" ]\n    const soundFiles = [ \"viio.aif\", \"vi.aif\", \"V.aif\", \"IV.aif\", \"iii.aif\", \"ii.aif\", \"I.aif\" ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Chords\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone';\n\nclass HiHats extends Instrument\n{\n\n  buffers: Tone.Player[]\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/Hi-Hats/\" ]\n    const soundFiles = [\n      \"MB Hi Hat (2).wav\",\n      \"MB Hi Hat (5).wav\",\n      \"MB Hi Hat (7).wav\",\n      \"MB Hi Hat (9).wav\",\n    ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\nexport default HiHats\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone';\n\nclass Lead extends Instrument\n{\n  notes: string[]\n  synths: any[]\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    this.synths = [\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster(),\n      new Tone.PluckSynth().toMaster()\n    ]\n    this.notes = [ \"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\" ].reverse()\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.synths[ sound ])\n    {\n      console.log('synth playing sound: ' + this.notes[ sound ])\n      this.synths[ sound ].triggerAttackRelease(this.notes[ sound ], '16n', time)\n    }\n  }\n}\n\nexport default Lead\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone'\n\nclass Snare extends Instrument\n{\n  buffers: any\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n\n    const soundFolder = [ \"/Snares/\" ]\n    const soundFiles = [\n      \"MB Snare (1).wav\",\n      \"MB Snare (2).wav\",\n      \"MB Snare (11).wav\",\n      \"MB Snare (15).wav\"\n    ]\n\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n\n  }\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a Snare sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Snare\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone'\n\nclass Clap extends Instrument\n{\n  buffers: any\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n\n    const soundFolder = [ \"/Claps/\" ]\n    const soundFiles = [\n      \"MB Clap (3).wav\",\n      \"MB Clap (2).wav\",\n      \"MB Clap (4).wav\",\n      \"MB Clap (7).wav\"\n    ]\n\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n\n  }\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a Snare sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Clap\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone';\n\nclass OpenHats extends Instrument\n{\n\n  buffers: Tone.Player[]\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/Open Hats/\" ]\n    const soundFiles = [\n      \"MB Open Hat (3).wav\",\n      \"MB Open Hat (5).wav\",\n      \"MB Open Hat (6).wav\",\n      \"MB Open Hat (8).wav\"\n    ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default OpenHats\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone'\n\nclass Crash extends Instrument\n{\n  buffers: any\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n\n    const soundFolder = [ \"/Crashes/\" ]\n    const soundFiles = [\n      \"MB Crash (3).wav\",\n      \"MB Crash (2).wav\",\n      \"MB Crash (5).wav\",\n      \"MB Crash (9).wav\"\n    ]\n\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n\n  }\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a Snare sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Crash\n\n","import Instrument, { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone';\n\nclass Percs extends Instrument\n{\n\n  buffers: Tone.Player[]\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/Extras/\" ]\n    const soundFiles = [\n      \"MB Church Bell.wav\",\n      \"MB Lumi Hit.wav\",\n      \"MB Narcatics Hit.wav\",\n      \"MB Tubular Bell.wav\"\n    ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\nexport default Percs\n\n","import * as React from 'react'\n\ninterface IPlayButtonProps\n{\n  isPlaying: boolean\n  playFunc: () => void\n}\ninterface IPlayButtonState\n{\n  isPlaying: boolean\n}\n\nclass PlayButton extends React.Component<IPlayButtonProps, IPlayButtonState>\n{\n  constructor(props: IPlayButtonProps)\n  {\n    super(props)\n\n    this.state = {\n      isPlaying: false\n    }\n  }\n\n  componentWillReceiveProps (newProps: IPlayButtonProps)\n  {\n    this.setState({\n      isPlaying: newProps.isPlaying\n    });\n  }\n\n  render ()\n  {\n    return (\n      <div className='playButton' onClick={this.props.playFunc}>\n        {this.state.isPlaying ? <i className=\"fa fa-stop\"></i> : <i className=\"fa fa-play\"></i>}\n      </div>\n    )\n  }\n}\n\nexport default PlayButton\n","import * as React from 'react'\n\nclass Track extends React.Component\n{\n  public render ()\n  {\n    return (\n      <div className='track'>\n        {/* children? */}\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Track\n","/** class that holds the master state of each track and beat being on/off \n * track soundboards tell this if they're on or not, \n * and the loopplayer asks this to determine whether or not to play a note.\n*/\nexport default class NoteMap \n{\n  // boolean state of a note \n  //    for each note in a sound \n  //    for each sound in a track \n  //    for each track in the app\n  _noteMap: number[][][]\n  constructor()\n  {\n    this._noteMap = [\n      [   // lead\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // Chords\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // 808\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // kick\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // snare\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // clap\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // hihats\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // open hihats\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // crashes\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n      [   // percs\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n        [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n      ],\n    ]\n\n    this.get = this.get.bind(this)\n    this.set = this.set.bind(this)\n    this.toggle = this.toggle.bind(this)\n  }\n\n  public get (track: number, sound: number, beat: number): boolean\n  {\n    return this._noteMap[ track ][ sound ][ beat ] ? true : false\n  }\n\n  public getTrack (track: number): number[][]\n  {\n    return this._noteMap[ track ]\n  }\n\n  public set (track: number, sound: number, beat: number, setting: boolean): boolean\n  {\n    this._noteMap[ track ][ sound ][ beat ] = setting ? 1 : 0\n    console.log(this._noteMap)\n    return this.get(track, sound, beat)\n  }\n\n  public toggle (track: number, sound: number, beat: number): boolean\n  {\n    console.log(\"toggling \" + track + \", \" + beat)\n    return this.set(track, sound, beat, !this.get(track, sound, beat))\n  }\n}\n\n\n// export default function ()\n// {\n//   const o = {\n//     _noteMap: [\n//       [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1 ],\n//       [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 ],\n//       [ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0 ],\n//       [ 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 ],\n//     ],\n\n//     get: function (this: any, track: number, beat: number) \n//     {\n//       return this._noteMap[ track ][ beat ] ? true : false\n//     },\n\n//     set: function (this: any, track: number, beat: number, setting: boolean) \n//     {\n//       this._noteMap[ track ][ beat ] = setting ? 1 : 0\n//     }\n//   }\n//   return o\n// }\n","import * as React from 'react'\nimport * as Tone from 'tone';\n\ninterface ILoopPlayerProps\n{\n  isPlaying: boolean\n  grid: boolean[][]\n  instruments: JSX.Element[]\n  noteMap: any\n}\ninterface ILoopPlayerState\n{\n  isPlaying: boolean\n  noteMap: any\n}\n\nclass LoopPlayer extends React.Component<ILoopPlayerProps, ILoopPlayerState>\n{\n  transport: any;\n  notes: boolean[][];\n  loops: any[];\n  loop: Tone.Loop;\n  instruments: JSX.Element[];\n  sounds: any;\n  noteMap: any;\n\n  constructor(props: ILoopPlayerProps)\n  {\n    super(props)\n    this.state = {\n      isPlaying: props.isPlaying,\n      noteMap: props.noteMap\n    }\n\n    this.transport = Tone.Transport\n    this.notes = this.props.grid\n    this.instruments = this.props.instruments\n  }\n\n  componentWillReceiveProps (nextProps: ILoopPlayerProps)\n  {\n    this.setState({\n      isPlaying: nextProps.isPlaying\n    })\n  }\n\n  render ()\n  {\n    if (this.state.isPlaying && this.transport.state != \"started\")\n    {\n      this.transport.start()\n    }\n    else if (!this.state.isPlaying)\n    {\n      this.transport.stop()\n    }\n\n    return (\n      <div className=\"loopPlayer\" />\n    )\n  }\n\n  public play ()\n  {\n    alert('loopplayer.play')\n    this.loop.start(0)\n  }\n  public stop ()\n  {\n    this.loop.stop(0)\n  }\n}\n\nexport default LoopPlayer\n","import Instrument from './Instrument'\nimport { IInstrumentProps } from './Instrument'\nimport * as Tone from 'tone'\n\nclass Sub extends Instrument\n{\n  buffers: any\n  constructor(props: IInstrumentProps)\n  {\n    super(props)\n    const soundFolder = [ \"/808s/\" ]\n    const soundFiles = [ \"MB 808 (2).wav\", \"MB 808 (7).wav\", \"MB 808 (9).wav\", \"MB 808 (10).wav\" ]\n    this.buffers = []\n    soundFiles.forEach((filename: string, i: number) =>\n    {\n      this.buffers.push(\n        new Tone.Player(this.baseURL + soundFolder + filename).toMaster()\n      )\n    })\n  }\n\n  public playSound (sound: number, time: number)\n  {\n    // tone js stff to play a kick sound\n    if (this.buffers[ sound ].loaded)\n    {\n      this.buffers[ sound ].start(time)\n    }\n  }\n}\n\nexport default Sub\n","import * as React from 'react'\nimport * as Tone from 'tone'\n\nimport './css/App.css'\nimport './css/main.css'\n\n// instruments\nimport Instrument from './sounds/Instrument'\nimport Kick from './sounds/Kick'\nimport Chords from './sounds/Chords'\nimport Hihats from './sounds/Hihats'\nimport Lead from './sounds/Lead'\nimport Snare from './sounds/Snare'\nimport Clap from './sounds/Clap'\nimport OpenHats from './sounds/OpenHats'\nimport Crash from './sounds/Crash'\nimport Percs from './sounds/Percs'\n\n// components\nimport PlayButton from './components/PlayButton'\nimport Track from './components/Track';\nimport NoteMap from './components/NoteMap';\nimport LoopPlayer from './components/LoopPlayer';\nimport Sub from './sounds/Sub';\n\ninterface IAppState\n{\n  trackNames: string[],\n  trackNotes: boolean[][],\n  trackClasses: (typeof Instrument)[],\n  loopPlaying: boolean,\n  noteMap: any\n  buffersLoaded: boolean\n}\n\nclass App extends React.Component<{}, IAppState>\n{\n  // loopPlayer: any;\n  constructor(props: {})\n  {\n    super(props)\n\n    const trackNames = [ \"Lead\", \"Chords\", \"Sub\", \"Kick\", \"Snare\", \"Clap\", \"Hihats\", \"OpenHats\", \"Crashes\", \"Percs\" ]\n    const trackInstruments = [ Lead, Chords, Sub, Kick, Snare, Clap, Hihats, OpenHats, Crash, Percs ]\n\n    this.state = {\n      trackNames: trackNames,\n      trackClasses: trackInstruments,\n      // tracks: trackElements,\n      trackNotes: [],\n      loopPlaying: false,\n      noteMap: new NoteMap(),\n      buffersLoaded: false\n    }\n\n    Tone.Buffer.on('load', () =>\n    {\n      this.setState({\n        buffersLoaded: true\n      })\n    })\n\n    console.log(\"App notemap says: \" + this.state.noteMap.get(0, 0))\n\n  }\n\n  public updateGrid (index: number, grid: any)\n  {\n    const notes = this.state.trackNotes\n    notes[ index ] = grid\n    this.setState({\n      trackNotes: notes\n    })\n  }\n\n  public togglePlayLoop ()\n  {\n    this.setState((prevState) => { return { loopPlaying: !prevState.loopPlaying } })\n  }\n\n  public render ()\n  {\n    const trackElements = this.state.trackClasses.map(\n      (el: typeof Instrument, index: number) =>\n        React.createElement(el,\n          {\n            key: index,\n            id: index,\n            myName: this.state.trackNames[ index ],\n            loopPlaying: this.state.loopPlaying,\n            updateGrid: (grid: any) => { this.updateGrid(index, grid) },\n            noteMap: this.state.noteMap\n          }))\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to the Web Audio Interface!</h1>\n          {this.state.buffersLoaded ?\n            <PlayButton\n              isPlaying={this.state.loopPlaying}\n              playFunc={() => this.togglePlayLoop()} />\n            : <p className='playBtnLoading'>Loading...</p>}\n          {/* {this.loopPlayer} */}\n          <LoopPlayer\n            isPlaying={this.state.loopPlaying}\n            instruments={trackElements}\n            noteMap={this.state.noteMap}\n            grid={this.state.trackNotes} />\n\n        </header>\n        <main>\n          <div className='Tracks'>\n            {\n              trackElements.map((E: JSX.Element, index: number) =>\n              {\n                return <Track key={index}>{E}</Track>\n              })}\n          </ div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}